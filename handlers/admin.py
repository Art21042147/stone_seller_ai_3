from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery
from aiogram import Router, F
from aiogram.filters import Command

from config_reader import config
from keyboards import bot_manager_kb
from states import AdminState
from db.requests import get_order_details

admin_router = Router()

# admin greeting handler
@admin_router.message(Command("admin"))
async def greeting_admin(message: Message):
    admin_id = int(config.admin_id.get_secret_value())
    if message.from_user.id == admin_id:
        await message.answer(
            '‚ûñ –ï—Å–ª–∏ –≤—ã –∑–Ω–∞–µ—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É\n'
            '<b>‚úÖ–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–∫–∞–∑</b>\n'
            '–∏ –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞\n'
            '‚ûñ –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É\n'
            'üìî<b>–í—Å–µ –∑–∞–∫–∞–∑—ã</b>\n'
            '‚ûñ –î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É\n'
            '<b>‚ùå–£–¥–∞–ª–∏—Ç—å –∑–∞–∫–∞–∑</b>\n'
            '–∏ –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞\n'
            '‚ûñ –ß—Ç–æ–±—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É\n'
            '<b>üîí–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n'
            '–∏ –≤–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n'
            '‚ûñ –ß—Ç–æ–±—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É\n'
            '<b>üîì–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n'
            '–∏ –≤–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n',
            reply_markup=bot_manager_kb)
    else:
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")

# get number for order handler
@admin_router.callback_query(F.data == 'get_order')
async def set_order_number(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞:")
    await state.set_state(AdminState.order)

# get order handler
async def get_order_by_id(message: Message, state: FSMContext):
    try:
        order_id = int(message.text)
        order_details = await get_order_details(order_id)

        if order_details:
            await message.answer(
                f"–ó–∞—è–≤–∫–∞ ‚Ññ{order_id}\n"
                f"–ò–º—è: {order_details['name']}\n"
                f"–¢–µ–ª–µ–≥—Ä–∞–º ID: {order_details['tg_id']}\n"
                f"–¢–µ–ª–µ—Ñ–æ–Ω: {order_details['phone']}\n"
                f"–ê–¥—Ä–µ—Å: {order_details['address']}\n"
                f"–ú–∞—Ç–µ—Ä–∏–∞–ª: {order_details['brand_title']}\n"
                f"–¶–≤–µ—Ç: {order_details['color_data']}\n"
                f"–†–∞–∑–º–µ—Ä—ã: {order_details['length']}x{order_details['width']}\n"
                f"–°—É–º–º–∞: {order_details['cost']:.2f} —Ä—É–±."
            )
        else:
            await message.answer("–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    except ValueError:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞.")
    finally:
        await state.clear()
